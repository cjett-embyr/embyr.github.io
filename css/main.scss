---
---

$items: 3;
$transition-duration: 0.5s;
$transition-delay: 0.05s;

* {
  box-sizing: border-box;
}

html, body {
  margin: 0;
  padding: 0;
}

body {
  display: grid;
  grid-template-columns: 1fr 3fr;
  grid-template-rows: 70vh auto auto 200px;
  grid-template-areas:
    "hero hero"
    "navigation navigation"
    "content content"
    "footer footer";
  background: white;
}

.hero {
  grid-area: hero;
  background: rgb(0,0,50);
}

#particles-js {
  height: 100%;
}

a {
  text-decoration: none;
}

.navigation {
  grid-area: navigation;
}

$p: 12px;
$w: 100%;
$n: 5;
$e: cubic-bezier(0,.5,.5,1.1);
$grey: #A6ADA7;
$pink: #F5C8BF;
$green: #AEBFAF;
$mint: #f2faf3;

nav {
  position: relative;
  animation: bounceInUp 1000ms linear 500ms forwards;
  label, a {
    transition: all 150ms ease-out;
    cursor: pointer;
    display: flex;
    align-items: center;
    align-content: center;
    height: 48px;
    width: $w;
    padding: 0 $p;
    background: white;
    border: 2px solid $grey;
    border-radius: 2px;
    font-size: 18px;
    font-weight: 600;
    letter-spacing: -1px;
  }
  a {
    &:hover, &:focus {
      border-color: mix($mint, $green);
    }
    &:active {
      border-color: $pink;
    }
  }
  label {
    position: relative;
    &:before, &:after {
      transition: all 150ms ease-out;
      content: "";
      display: block;
      position: absolute;
      width: 2px;
      height: 12px;
      background: $grey;
      border-radius: 2px;
    }
    &:before {
      transform: rotate(-45deg);
    }
    &:after {
      transform: rotate(45deg);
    }
    &.down {
      &:before, &:after {
        transform-origin: center 11px;
        top: 50%;
        margin-top: -6px;
        right: 20px;
      }
    }
    &.right {
      &:before, &:after {
        transform-origin: left center;
        top: 50%;
        right: 20px;
      }
      &:before {
        margin-top: -9px;
      }
      &:after {
        margin-top: -3px;
      }
    }
  }
  > label {
    transform: translateZ(1px);
    z-index: 1;
  }
  ul {
    will-change: visibility;
    transition: visibility 0ms ease-out 600ms;
    visibility: hidden;
    z-index: 1;
    li {
      will-change: transform, opacity;
      padding: $p/3 0;
      opacity: 0;
      @for $i from 1 through $n {
        &:nth-child(#{$i}) {
          transition: transform 150ms $e #{-($i - $n - 1)*100}ms, opacity 100ms ease-out #{-($i - $n - 1)*100}ms;
        }
      }
    }
  }
  > ul {
    position: relative;
    padding-top: $p/3;
    > li {
      transform: translateY(-100%);
      > label {
        transform: translateZ(0.5px);
      }
    }
    ul {
      position: absolute;
      top: 0;
      //right: calc(-$w - $p/1.5);
      > li {
        transform: translateX(-100%);
      }
    }
  }
  input {
    cursor: pointer;
    appearance: none;
    opacity: 0;
    position: absolute;
    width: $w;
    height: 48px;
    margin: 0;
    &:hover, &:focus {
      ~ label {
        border-color: mix($mint, $green);
      }
    }
    &:active {
      ~ label {
        border-color: $pink;
      }
    }
    &:checked {
      ~ label {
        border-color: $green;
        &.down {
          &:before, &:after {
            margin-top: -16px;
          }
          &:before {
            transform: rotate(-135deg);
          }
          &:after {
            transform: rotate(135deg);
          }
        }
        &.right {
          &:before {
            transform: rotate(45deg);
            margin-top: -11px;
        }
          &:after {
            transform: rotate(-45deg);
            margin-top: -2px;
          }
        }
      }
      ~ ul {
        visibility: visible;
        transition: visibility 0ms ease-out 0ms;
        > li {
          opacity: 1;
          transform: none;
          @for $i from 1 through $n {
            &:nth-child(#{$i}) {
              transition: transform 150ms $e #{$i*100}ms, opacity 100ms ease-out #{$i*100}ms;
            }
          }
        }
      }
    }
  }
  > input {
    z-index: 2;
    top: 0;
    left: 0;
    &:not(:checked) {
      ~ ul {
        > li {
          input:checked ~ ul {
            li {
              opacity: 0;
              transform: translateX(-100%);
              @for $i from 1 through $n {
                &:nth-child(#{$i}) {
                  transition: transform 150ms $e #{-($i - $n - 1)*100}ms, opacity 100ms ease-out #{-($i - $n - 1)*100}ms;
                }
              }
            }
          }
        }
      }       
    }
  }
}

.pinned-items {
  grid-area: pinned;
  background: gray;
}

.content {
  grid-area: content;
  background: #333333;
}

.footer {
  grid-area: footer;
  background: black;
}

@media (min-width: 1100px) {
  body {
    grid-template-rows: 100vh auto auto 200px;
    grid-template-areas:
      "hero hero"
      "navigation content"
      "pinned content"
      "footer footer"
  }
}
